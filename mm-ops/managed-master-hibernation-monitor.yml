---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
rules:
- apiGroups: ['extensions']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - cb-restricted
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - patch
  - update
  - list
---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: managed-master-hibernation-monitor
subjects:
- kind: ServiceAccount
  name: managed-master-hibernation-monitor
---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-service.yaml

apiVersion: v1
kind: Service
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
    app: managed-master-hibernation-monitor
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8090
    # TODO is nodePort needed?
  selector:
    # TODO does this need to be made specific to release somehow?
    app: managed-master-hibernation-monitor
  # TODO consider OperationsCenter.ServiceType
  type: ClusterIP
---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app: managed-master-hibernation-monitor
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: managed-master-hibernation-monitor
  template:
    metadata:
      labels:
        app: managed-master-hibernation-monitor
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/name: "cloudbees-core"
    spec:
      affinity:
        nodeAffinity:
          # Schedule on Linux nodes only.
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                  - linux
      containers:
      - name: managed-master-hibernation-monitor
        image: cloudbees/managed-master-hibernation-monitor:201.ad3b50f73a59
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8090
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8090
          periodSeconds: 30
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8090
          periodSeconds: 30
          timeoutSeconds: 30
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            memory: 250Mi
      serviceAccountName: managed-master-hibernation-monitor
---
# Source: cloudbees-core/templates/managed-master-hibernation-monitor-ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: managed-master-hibernation-monitor
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/name: "cloudbees-core"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: "preview.cb-sa.io"
    http:
      paths:
      - path: /hibernation
        backend:
          serviceName: managed-master-hibernation-monitor
          servicePort: 80  